{"version":3,"sources":["Components/Form/Form.module.css","Components/Form/Button/Button.module.css","Components/SectionH1/SectionH1.module.css","Components/Contacts/Contacts.module.css","Components/SectionH2/SectionH2.module.css","Components/Form/Button/Button.jsx","Components/Form/InputName/InputName.jsx","Components/Form/InputTel/InputTel.jsx","Components/Form/Form.jsx","Components/SectionH1/SectionH1.jsx","Components/Contacts/ButtonDelete/ButtonDelete.jsx","Components/Contacts/Contacts.jsx","Components/SectionH2/SectionH2.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Button","type","text","className","s","submitBtn","InputName","value","onChange","nameLabel","inputField","name","pattern","title","required","InputTel","Form","state","number","handleSubmit","e","preventDefault","props","onSubmit","clearForm","setState","handleChange","target","form","this","Component","SectionH1","children","h1","ButtonDelete","id","onClick","Contacts","contactsList","onDeleteContact","map","contact","propTypes","PropTypes","arrayOf","shape","key","string","isRequired","func","SectionH2","h2","Filter","exampleContacts","App","contacts","filter","addContact","newContact","uuidv4","toLowerCase","includes","alert","prevState","formSubmitHandler","data","deleteContactHandler","filterHundler","JSON","parse","localStorage","getItem","setItem","stringify","normalizedFilter","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53539c9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2eJ9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"Button_submitBtn__McBH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"SectionH1_h1__zabfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contacts_contact__2sol-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"SectionH2_h2__1226t\"};","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ type, text }) {\n  return (\n    <button className={s.submitBtn} type={type}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './InputName.module.css';\n\nexport default function InputName({ value, onChange }) {\n  return (\n    <label className={s.nameLabel}>\n      Name\n      <input\n        className={s.inputField}\n        onChange={onChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n      />\n    </label>\n  );\n}\n\nInputName.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport default function InputTel({ value, onChange }) {\n  return (\n    <label className=\"nameLabel\">\n      Number\n      <input\n        onChange={onChange}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={value}\n      />\n    </label>\n  );\n}\nInputTel.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { Component } from 'react';\nimport s from './Form.module.css';\n\nimport Button from './Button';\nimport InputName from './InputName';\nimport InputTel from './InputTel';\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.clearForm();\n  };\n\n  clearForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <form className={s.form} name=\"addContact\" onSubmit={this.handleSubmit}>\n        <InputName value={this.state.name} onChange={this.handleChange} name=\"name\"></InputName>\n        <InputTel value={this.state.number} onChange={this.handleChange} name=\"number\" />\n        <Button type=\"submit\" text=\"Add contact\"></Button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './SectionH1.module.css';\n\nexport default function SectionH1({ title, children }) {\n  return (\n    <section>\n      <h1 className={s.h1}>{title}</h1>\n      <div>{children}</div>\n    </section>\n  );\n}\n\nSectionH1.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n\nexport default function ButtonDelete({ type, text, id, onClick }) {\n  return (\n    <button type={type} onClick={() => onClick(id)}>\n      {text}\n    </button>\n  );\n}\n\nButtonDelete.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nimport s from './Contacts.module.css';\n\nimport ButtonDelete from './ButtonDelete';\n\nexport default function Contacts({ contactsList, onDeleteContact }) {\n  return (\n    <ul>\n      {contactsList.map(contact => {\n        return (\n          <li className={s.contact} key={contact.id}>\n            {contact.name}: {contact.number}{' '}\n            <ButtonDelete\n              type=\"button\"\n              text=\"Delete\"\n              id={contact.id}\n              onClick={onDeleteContact}\n            ></ButtonDelete>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nButtonDelete.propTypes = {\n  contactsList: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      onClick: PropTypes.func,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './SectionH2.module.css';\n\nexport default function SectionH2({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.h2}>{title}</h2>\n      <div>{children}</div>\n    </section>\n  );\n}\n\nSectionH2.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contacts by name\n      <input name=\"filter\" type=\"text\" onChange={onChange} value={value} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport { Component } from 'react';\nimport './App.css';\n\nimport Form from './Components/Form';\nimport SectionH1 from './Components/SectionH1';\nimport Contacts from './Components/Contacts';\nimport SectionH2 from './Components/SectionH2';\nimport Filter from './Components/Filter/Filter';\n\nconst exampleContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    this.setState({ contacts: JSON.parse(localStorage.getItem('contacts')) ?? exampleContacts });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  addContact = ({ name, number }) => {\n    const newContact = { name: name, number: number, id: uuidv4() };\n\n    if (\n      !this.state.contacts.map(contact => contact.name.toLowerCase()).includes(name.toLowerCase())\n    ) {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact],\n      }));\n    } else alert(`${name} is already in contacts.`);\n  };\n\n  formSubmitHandler = data => {\n    this.addContact(data);\n  };\n\n  deleteContactHandler = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  filterHundler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <>\n        <SectionH1 title=\"Phonebook\">\n          <Form onSubmit={this.formSubmitHandler}></Form>\n        </SectionH1>\n        <SectionH2 title=\"Contacts\">\n          <Filter value={this.state.filter} onChange={this.filterHundler} />\n          <Contacts\n            contactsList={filteredContacts}\n            onDeleteContact={this.deleteContactHandler}\n          ></Contacts>\n        </SectionH2>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}